import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.*;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Random;

public class CSC372CriticalThinking3Option1 extends JFrame {

    private JTextArea textArea;

    public CSC372CriticalThinking3Option1() {
        setTitle("CSC372 Critical Thinking 3 Option 1");
        setSize(500, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        textArea = new JTextArea();
        textArea.setEditable(false);
        JScrollPane scrollPane = new JScrollPane(textArea);
        add(scrollPane, BorderLayout.CENTER);

        // Create the toolbar with buttons
        JToolBar toolBar = new JToolBar();
        JButton dateButton = new JButton("Get Date and Time");
        JButton saveButton = new JButton("Save to Log");
        JButton colorButton = new JButton("Change Background Color");
        JButton exitButton = new JButton("Exit");

        // Add action listeners
        dateButton.addActionListener(e -> showDateTime());
        saveButton.addActionListener(e -> saveToLog());
        colorButton.addActionListener(e -> changeBackgroundColor());
        exitButton.addActionListener(e -> System.exit(0));

        // Add buttons to toolbar
        toolBar.add(dateButton);
        toolBar.add(saveButton);
        toolBar.add(colorButton);
        toolBar.add(exitButton);

        // Add the toolbar to the frame
        add(toolBar, BorderLayout.NORTH);
    }

    private void showDateTime() {
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Date date = new Date();
        textArea.setText("Current Date and Time: " + formatter.format(date));
    }

    private void saveToLog() {
        String text = textArea.getText();
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("log.txt"))) {
            writer.write(text);
            JOptionPane.showMessageDialog(this, "Text saved to log.txt");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error saving to log.txt");
        }
    }

    private void changeBackgroundColor() {
        Random rand = new Random();
        float hue = rand.nextFloat() * 0.1f + 0.3f;
        float saturation = 1.0f;
        float brightness = 1.0f;
        Color color = Color.getHSBColor(hue, saturation, brightness);
        getContentPane().setBackground(color);
        textArea.setText("Background color changed to: " + color);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            CSC372CriticalThinking3Option1 app = new CSC372CriticalThinking3Option1();
            app.setVisible(true);
        });
    }
}
